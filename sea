#!/bin/sh -e

# sea, the POSIX shell-script package manager

log () {
    # print fancy outputs
    printf "%b\n" "\u001b[36m[#] \u001b[0m$1"
}

warning () {
    # print fancy warnings
    printf "%b\n" "\u001b[36m[!] \u001b[33m\u001b[1m$1"
}

die () {
    # exit program with 1
    printf "%b\n" "\u001b[35m[x] \u001b[1m\u001b[31m$1"
    exit 1
}

usage () {
    # prints the usage of a command depending on the arguments
    printf "\n"
    printf "Usage: sea [OPTION] [ACTION] <ARGS>\n\n"
    printf "Options: TBA\n\n"
    printf "Actions:\n"
    printf "    i, install <pkg>       | install package(s)\n"
    printf "    q, query <mode> <args> | search for package(s)\n"
    printf "    r, remove <pkg>        | remove package(s)\n"
    printf "    s, submit <file>       | upload package for approval\n"
    printf "    u, upgrade [pkg]       | update package(s) to latest versions\n"
    printf "\n"
}

pkg_extract () {
    # extracts a package to a working directory, changes directories to said working directory
    mkdir -p "/tmp/$$/$1" || die "Unable to create working directory. Exiting."
    tar -vxf "$1.tar.gz" -C "/tmp/$$/$1"
    cd "/tmp/$$/$1"
}

pkg_depends () {
    # Resolves dependencies of a package.
    # Assumes that the directory has been created, and the PWD is the directory.
    if test -e depends; then
        for line in depends; do
            if [ "$(command -v $line)" ]; then
                log "Dependency $line present."
            else
                warning "Dependency $line missing."
            fi
        done
    else
        log "No dependency file found."
    fi
    log "Would you like to continue? Press Enter to continue or Ctrl+C to exit."
    read -r _
    # Above is a prompt for continuing or exiting.
}

pkg_install () {
    #Given one argument, the tarball for a package.
    pkg_extract "$1" || die "Unable to extract package."
    pkg_depends
    # Assumption is at this point, we are in the directory.
}
usage
